import multer from 'multer';
import { documentParser } from '../utils/pdfParser.js';

// Configurar multer para usar almacenamiento en memoria
const storage = multer.memoryStorage();
const upload = multer({
    storage,
    fileFilter: (req, file, cb) => {
        const allowedTypes = ['application/pdf', 'image/jpeg', 'image/png'];
        if (!allowedTypes.includes(file.mimetype)) {
            cb(new Error('Solo se permiten archivos PDF e imágenes'));
            return;
        }
        cb(null, true);
    },
    limits: {
        fileSize: 5 * 1024 * 1024 // 5MB
    }
}).single('file');

class DeliveryNoteUploadController {
    async uploadFile(req, res) {
        try {
            await new Promise((resolve, reject) => {
                upload(req, res, (err) => {
                    if (err) reject(err);
                    else resolve();
                });
            });

            if (!req.file) {
                return res.status(400).json({
                    success: false,
                    error: 'No se ha proporcionado ningún archivo'
                });
            }

            // Procesar el archivo según su tipo
            let extractedData;
            if (req.file.mimetype === 'application/pdf') {
                extractedData = await documentParser.parsePDF(req.file.buffer);
            } else {
                extractedData = await documentParser.parseImage(req.file.buffer);
            }

            res.json({
                success: true,
                data: extractedData
            });

        } catch (error) {
            console.error('Error processing delivery note:', error);
            res.status(500).json({
                success: false,
                error: 'Error al procesar el albarán'
            });
        }
    }

    async confirmDeliveryNote(req, res) {
        try {
            const deliveryNoteData = req.body;

            // Aquí iría la lógica para guardar los datos en la base de datos
            // Por ahora solo devolvemos éxito
            
            res.json({
                success: true,
                message: 'Albarán guardado correctamente'
            });

        } catch (error) {
            console.error('Error confirming delivery note:', error);
            res.status(500).json({
                success: false,
                error: 'Error al guardar el albarán'
            });
        }
    }
}

export const deliveryNoteUploadController = new DeliveryNoteUploadController();
